name: Put targets in boundary 
run-name: Add targets in boundary

on: push

jobs:  
  build:
    runs-on: self-hosted
    name: Put targets in boundary
    steps:
      - uses: chrisdickinson/setup-yq@latest
      - uses: dcarbone/install-jq-action@v1.0.1
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 
      - name: Get changed files in the docs folder
        id: changed-files-specific
        uses: tj-actions/changed-files@v34
        with:
          files: |
            Vault-secrets/boundary/**
      # - name: Run step if any file(s) in the Vault-secret folder change
      #   if: steps.changed-files-specific.outputs.any_changed == 'true'
      #   run: |
      #     for file in ${{ steps.changed-files-specific.outputs.all_changed_files }} ; do 
      #       yq -o=json $file
      #     done
      # Prints the changes when done / added - Git Actions does not run when file is removed ******
      - name: To upload targets 
        run: |
            echo "{\"command\":\"login\",\"token_type\":null,\"attributes\":{\"login_name\":\"admin\",\"password\":\"password\"}}" > payload.json
            curl --request POST --data @payload.json http://boundary-release.default:9200/v1/auth-methods/ampw_sC1BbzThIj:authenticate > response.json
            token=$(jq -r '.attributes.token' response.json)
            echo $token
            for val in ${{ steps.changed-files-specific.outputs.all_changed_files }} ;
            do 
                echo $val
                #get project id
                project_name=$(yq r $val "project")
                project_id=""
                if [ $project_name == "stage" ]
                then
                  project_id="p_Jv4BjggzW9"
                else
                  project_id="p_HBZMfr6PcE"
                fi

                #read host-catalog from yaml file 
                host_catalog_name=$(yq r $val "host-catalog.name")
                host_catalog_description=$(yq r $val "host-catalog.description")
                
                
                #get host-catalog list
                curl --header "Authorization: Bearer ${token}" --request GET http://boundary-release.default:9200/v1/host-catalogs?scope_id=$project_id > all_host_catalogs.json
                host_catalog_id=$(jq -r --arg hc_name $host_catalog_name '.items[] | select(.name==$hc_name) | .id' all_host_catalogs.json)
                
                echo $host_catalog_id
                if [ -z "$host_catalog_id" ]; then
                  echo "{\"type\":\"static\",\"name\":\"${host_catalog_name}\",\"description\":\"${host_catalog_description}\",\"scope_id\":\"${project_id}\"}" > host_catalog.json
                  host_catalog_id=$(curl --header "Authorization: Bearer ${token}" --request POST --data @host_catalog.json http://boundary-release.default:9200/v1/host-catalogs | jq '.id' )
                  rm -f host_catalog.json
                fi
                
                #get host-set list which is already present 
                curl --header "Authorization: Bearer ${token}" --request GET http://boundary-release.default:9200/v1/host-sets?host_catalog_id=$host_catalog_id > all_host_set.json
                old_host_set_list=""
                if [ -s all_host_set.json ] ;
                then
                else
                    old_host_set_list=$(jq -r '.items[].name' all_host_set.json)
                fi

                #host-sets in yaml file 
                new_host_set_list=$(yq r $val "host-catalog.host-sets.[].name")

                cat old_host_set_list new_host_set_list | sort | uniq -u 


            done
            
        
          

