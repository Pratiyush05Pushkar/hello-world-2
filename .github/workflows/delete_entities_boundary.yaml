name: Delete items in Boundary

on:
  workflow_call:
    inputs:
      BOUNDARY_URL:
        required: true
        type: string
      VAULT_URL:
        required: true
        type: string
      REALM:
        required: true
        type: string
    secrets:
      token:
        required: true
      VAULT_TOKEN:
        required: true


jobs:
  build:
    runs-on: self-hosted
    name: Delete Entities in Boundary
    steps:
      - uses: dcarbone/install-yq-action@v1.0.0
      - uses: dcarbone/install-jq-action@v1.0.1
      - name: Restore files to cache
        uses: actions/cache@v3
        with:
          key: ${{ github.sha }}_${{ inputs.REALM }}_delete_entities
          path: ./${{ inputs.REALM }}_delete_entities.yaml
      - name: Echo the data file
        run: |
            cat ${{ inputs.REALM }}_delete_entities.yaml

            host_ids=($( yq ".items[].host_id" ${{ inputs.REALM }}_delete_entities.yaml))
            host_set_ids=($( yq ".items[].host_set_id" ${{ inputs.REALM }}_delete_entities.yaml))
            read_target_ids=($( yq ".items[].read_target_id" ${{ inputs.REALM }}_delete_entities.yaml))
            write_target_ids=($( yq ".items[].write_target_id" ${{ inputs.REALM }}_delete_entities.yaml))
            cred_store_ids=($( yq ".items[].cred_store_id" ${{ inputs.REALM }}_delete_entities.yaml))
            vault_db_read_roles=($( yq ".items[].vault_db_read_role" ${{ inputs.REALM }}_delete_entities.yaml))
            vault_db_write_roles=($( yq ".items[].vault_db_write_role" ${{ inputs.REALM }}_delete_entities.yaml))
            vault_db_connections=($( yq ".items[].vault_db_connection" ${{ inputs.REALM }}_delete_entities.yaml))
            vault_db_policys=($( yq ".items[].vault_db_policy" ${{ inputs.REALM }}_delete_entities.yaml))

            for i in ${!host_ids[@]};
            do
                  #delete host
                  curl --header "Authorization: Bearer ${{ secrets.token }}" --request DELETE ${{ inputs.BOUNDARY_URL }}/v1/hosts/${host_ids[$i]}
                  echo Host deleted

                  #delete host-set
                  curl --header "Authorization: Bearer ${{ secrets.token }}" --request DELETE ${{ inputs.BOUNDARY_URL }}/v1/host-sets/${host_set_ids[$i]}
                  echo Host-set deleted

                  #delete read target
                  curl --header "Authorization: Bearer ${{ secrets.token }}" --request DELETE ${{ inputs.BOUNDARY_URL }}/v1/targets/${read_target_ids[$i]}
                  echo Read target deleted

                  #delete write target
                  curl --header "Authorization: Bearer ${{ secrets.token }}" --request DELETE ${{ inputs.BOUNDARY_URL }}/v1/targets/${write_target_ids[$i]}
                  echo Write target deleted

                  #delete credential store
                  curl --header "Authorization: Bearer ${{ secrets.token }}" --request DELETE ${{ inputs.BOUNDARY_URL }}/v1/credential-stores/${cred_store_ids[$i]}
                  echo credential store deleted

                  #delete read_db_role from vault
                  curl --header "X-Vault-Token:${{ secrets.VAULT_TOKEN }}" --request DELETE ${{ inputs.VAULT_URL }}/v1/database/roles/${vault_db_read_roles[$i]}
                  echo read_db_role deleted

                  #delete write_db_role from vault
                  curl --header "X-Vault-Token:${{ secrets.VAULT_TOKEN }}" --request DELETE ${{ inputs.VAULT_URL }}/v1/database/roles/${vault_db_write_roles[$i]}
                  echo write_db_role deleted

                  #delete db_connection from vault
                  curl --header "X-Vault-Token:${{ secrets.VAULT_TOKEN }}" --request DELETE ${{ inputs.VAULT_URL }}/v1/database/config/${vault_db_connections[$i]}
                  echo db_connection deleted

                  #delete boundary access policy from vault
                  curl --header "X-Vault-Token:${{ secrets.VAULT_TOKEN }}" --request DELETE ${{ inputs.VAULT_URL }}/v1/sys/policies/acl/${vault_db_policys[$i]}
                  echo Policy deleted
            done
      - name: Delete cache file
        run: |
          curl -L \
          -X DELETE \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer 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" \
          "https://api.github.com/repos/Pratiyush05Pushkar/hello-world-2/actions/caches?key=${{ github.sha }}_${{ inputs.REALM }}_delete_entities"
          #curl --location --request DELETE --header "Accept: application/vnd.github+json" --header "Authorization: Bearer ${{ secrets.DELETE_CACHE_GIT_TOKEN }}" "https://api.github.com/repos/Pratiyush05Pushkar/hello-world-2/actions/caches?key=${{ github.sha }}_${{ inputs.REALM }}_delete_entities"



